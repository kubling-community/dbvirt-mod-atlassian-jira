/**
 * Jira Software Cloud API
 * Jira Software Cloud REST API documentation
 *
 * The version of the OpenAPI document: 1001.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The PartiallyUpdateEpicRequestColor model module.
 * @module model/PartiallyUpdateEpicRequestColor
 * @version 1001.0.0
 */
class PartiallyUpdateEpicRequestColor {
    /**
     * Constructs a new <code>PartiallyUpdateEpicRequestColor</code>.
     * @alias module:model/PartiallyUpdateEpicRequestColor
     */
    constructor() { 
        
        PartiallyUpdateEpicRequestColor.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>PartiallyUpdateEpicRequestColor</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/PartiallyUpdateEpicRequestColor} obj Optional instance to populate.
     * @return {module:model/PartiallyUpdateEpicRequestColor} The populated <code>PartiallyUpdateEpicRequestColor</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new PartiallyUpdateEpicRequestColor();

            if (data.hasOwnProperty('key')) {
                obj['key'] = ApiClient.convertToType(data['key'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>PartiallyUpdateEpicRequestColor</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>PartiallyUpdateEpicRequestColor</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['key'] && !(typeof data['key'] === 'string' || data['key'] instanceof String)) {
            throw new Error("Expected the field `key` to be a primitive type in the JSON string but got " + data['key']);
        }

        return true;
    }


}



/**
 * @member {module:model/PartiallyUpdateEpicRequestColor.KeyEnum} key
 */
PartiallyUpdateEpicRequestColor.prototype['key'] = undefined;





/**
 * Allowed values for the <code>key</code> property.
 * @enum {String}
 * @readonly
 */
PartiallyUpdateEpicRequestColor['KeyEnum'] = {

    /**
     * value: "color_1"
     * @const
     */
    "1": "color_1",

    /**
     * value: "color_2"
     * @const
     */
    "2": "color_2",

    /**
     * value: "color_3"
     * @const
     */
    "3": "color_3",

    /**
     * value: "color_4"
     * @const
     */
    "4": "color_4",

    /**
     * value: "color_5"
     * @const
     */
    "5": "color_5",

    /**
     * value: "color_6"
     * @const
     */
    "6": "color_6",

    /**
     * value: "color_7"
     * @const
     */
    "7": "color_7",

    /**
     * value: "color_8"
     * @const
     */
    "8": "color_8",

    /**
     * value: "color_9"
     * @const
     */
    "9": "color_9",

    /**
     * value: "color_10"
     * @const
     */
    "10": "color_10",

    /**
     * value: "color_11"
     * @const
     */
    "11": "color_11",

    /**
     * value: "color_12"
     * @const
     */
    "12": "color_12",

    /**
     * value: "color_13"
     * @const
     */
    "13": "color_13",

    /**
     * value: "color_14"
     * @const
     */
    "14": "color_14"
};



export default PartiallyUpdateEpicRequestColor;

