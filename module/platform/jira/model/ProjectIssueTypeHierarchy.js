/**
 * The Jira Cloud platform REST API
 * Jira Cloud platform REST API documentation
 *
 * The version of the OpenAPI document: 1001.0.0-SNAPSHOT-122db9bd6b089919e6465ce52fdce319d5a9dfb4
 * Contact: ecosystem@atlassian.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import Hierarchy from './Hierarchy';
import SimplifiedHierarchyLevel from './SimplifiedHierarchyLevel';

/**
 * The ProjectIssueTypeHierarchy model module.
 * @module model/ProjectIssueTypeHierarchy
 * @version 1001.0.0-SNAPSHOT-122db9bd6b089919e6465ce52fdce319d5a9dfb4
 */
class ProjectIssueTypeHierarchy {
    /**
     * Constructs a new <code>ProjectIssueTypeHierarchy</code>.
     * The issue type hierarchy for the project.
     * @alias module:model/ProjectIssueTypeHierarchy
     * @implements module:model/Hierarchy
     */
    constructor() { 
        Hierarchy.initialize(this);
        ProjectIssueTypeHierarchy.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>ProjectIssueTypeHierarchy</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/ProjectIssueTypeHierarchy} obj Optional instance to populate.
     * @return {module:model/ProjectIssueTypeHierarchy} The populated <code>ProjectIssueTypeHierarchy</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new ProjectIssueTypeHierarchy();
            Hierarchy.constructFromObject(data, obj);

            if (data.hasOwnProperty('baseLevelId')) {
                obj['baseLevelId'] = ApiClient.convertToType(data['baseLevelId'], 'Number');
            }
            if (data.hasOwnProperty('levels')) {
                obj['levels'] = ApiClient.convertToType(data['levels'], [SimplifiedHierarchyLevel]);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>ProjectIssueTypeHierarchy</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>ProjectIssueTypeHierarchy</code>.
     */
    static validateJSON(data) {
        if (data['levels']) { // data not null
            // ensure the json data is an array
            if (!Array.isArray(data['levels'])) {
                throw new Error("Expected the field `levels` to be an array in the JSON data but got " + data['levels']);
            }
            // validate the optional field `levels` (array)
            for (const item of data['levels']) {
                SimplifiedHierarchyLevel.validateJSON(item);
            };
        }

        return true;
    }


}



/**
 * The ID of the base level. This property is deprecated, see [Change notice: Removing hierarchy level IDs from next-gen APIs](https://developer.atlassian.com/cloud/jira/platform/change-notice-removing-hierarchy-level-ids-from-next-gen-apis/).
 * @member {Number} baseLevelId
 */
ProjectIssueTypeHierarchy.prototype['baseLevelId'] = undefined;

/**
 * Details about the hierarchy level.
 * @member {Array.<module:model/SimplifiedHierarchyLevel>} levels
 */
ProjectIssueTypeHierarchy.prototype['levels'] = undefined;


// Implement Hierarchy interface:
/**
 * The ID of the base level. This property is deprecated, see [Change notice: Removing hierarchy level IDs from next-gen APIs](https://developer.atlassian.com/cloud/jira/platform/change-notice-removing-hierarchy-level-ids-from-next-gen-apis/).
 * @member {Number} baseLevelId
 */
Hierarchy.prototype['baseLevelId'] = undefined;
/**
 * Details about the hierarchy level.
 * @member {Array.<module:model/SimplifiedHierarchyLevel>} levels
 */
Hierarchy.prototype['levels'] = undefined;




export default ProjectIssueTypeHierarchy;

