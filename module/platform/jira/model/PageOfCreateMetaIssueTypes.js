/**
 * The Jira Cloud platform REST API
 * Jira Cloud platform REST API documentation
 *
 * The version of the OpenAPI document: 1001.0.0-SNAPSHOT-122db9bd6b089919e6465ce52fdce319d5a9dfb4
 * Contact: ecosystem@atlassian.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import IssueTypeIssueCreateMetadata from './IssueTypeIssueCreateMetadata';

/**
 * The PageOfCreateMetaIssueTypes model module.
 * @module model/PageOfCreateMetaIssueTypes
 * @version 1001.0.0-SNAPSHOT-122db9bd6b089919e6465ce52fdce319d5a9dfb4
 */
class PageOfCreateMetaIssueTypes {
    /**
     * Constructs a new <code>PageOfCreateMetaIssueTypes</code>.
     * A page of CreateMetaIssueTypes.
     * @alias module:model/PageOfCreateMetaIssueTypes
     * @extends Object
     */
    constructor() { 
        
        PageOfCreateMetaIssueTypes.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>PageOfCreateMetaIssueTypes</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/PageOfCreateMetaIssueTypes} obj Optional instance to populate.
     * @return {module:model/PageOfCreateMetaIssueTypes} The populated <code>PageOfCreateMetaIssueTypes</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new PageOfCreateMetaIssueTypes();

            ApiClient.constructFromObject(data, obj, 'Object');
            

            if (data.hasOwnProperty('createMetaIssueType')) {
                obj['createMetaIssueType'] = ApiClient.convertToType(data['createMetaIssueType'], [IssueTypeIssueCreateMetadata]);
            }
            if (data.hasOwnProperty('issueTypes')) {
                obj['issueTypes'] = ApiClient.convertToType(data['issueTypes'], [IssueTypeIssueCreateMetadata]);
            }
            if (data.hasOwnProperty('maxResults')) {
                obj['maxResults'] = ApiClient.convertToType(data['maxResults'], 'Number');
            }
            if (data.hasOwnProperty('startAt')) {
                obj['startAt'] = ApiClient.convertToType(data['startAt'], 'Number');
            }
            if (data.hasOwnProperty('total')) {
                obj['total'] = ApiClient.convertToType(data['total'], 'Number');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>PageOfCreateMetaIssueTypes</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>PageOfCreateMetaIssueTypes</code>.
     */
    static validateJSON(data) {
        if (data['createMetaIssueType']) { // data not null
            // ensure the json data is an array
            if (!Array.isArray(data['createMetaIssueType'])) {
                throw new Error("Expected the field `createMetaIssueType` to be an array in the JSON data but got " + data['createMetaIssueType']);
            }
            // validate the optional field `createMetaIssueType` (array)
            for (const item of data['createMetaIssueType']) {
                IssueTypeIssueCreateMetadata.validateJSON(item);
            };
        }
        if (data['issueTypes']) { // data not null
            // ensure the json data is an array
            if (!Array.isArray(data['issueTypes'])) {
                throw new Error("Expected the field `issueTypes` to be an array in the JSON data but got " + data['issueTypes']);
            }
            // validate the optional field `issueTypes` (array)
            for (const item of data['issueTypes']) {
                IssueTypeIssueCreateMetadata.validateJSON(item);
            };
        }

        return true;
    }


}



/**
 * @member {Array.<module:model/IssueTypeIssueCreateMetadata>} createMetaIssueType
 */
PageOfCreateMetaIssueTypes.prototype['createMetaIssueType'] = undefined;

/**
 * The list of CreateMetaIssueType.
 * @member {Array.<module:model/IssueTypeIssueCreateMetadata>} issueTypes
 */
PageOfCreateMetaIssueTypes.prototype['issueTypes'] = undefined;

/**
 * The maximum number of items to return per page.
 * @member {Number} maxResults
 */
PageOfCreateMetaIssueTypes.prototype['maxResults'] = undefined;

/**
 * The index of the first item returned.
 * @member {Number} startAt
 */
PageOfCreateMetaIssueTypes.prototype['startAt'] = undefined;

/**
 * The total number of items in all pages.
 * @member {Number} total
 */
PageOfCreateMetaIssueTypes.prototype['total'] = undefined;






export default PageOfCreateMetaIssueTypes;

