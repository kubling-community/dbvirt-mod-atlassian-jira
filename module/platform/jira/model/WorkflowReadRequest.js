/**
 * The Jira Cloud platform REST API
 * Jira Cloud platform REST API documentation
 *
 * The version of the OpenAPI document: 1001.0.0-SNAPSHOT-122db9bd6b089919e6465ce52fdce319d5a9dfb4
 * Contact: ecosystem@atlassian.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import ProjectAndIssueTypePair from './ProjectAndIssueTypePair';

/**
 * The WorkflowReadRequest model module.
 * @module model/WorkflowReadRequest
 * @version 1001.0.0-SNAPSHOT-122db9bd6b089919e6465ce52fdce319d5a9dfb4
 */
class WorkflowReadRequest {
    /**
     * Constructs a new <code>WorkflowReadRequest</code>.
     * @alias module:model/WorkflowReadRequest
     */
    constructor() { 
        
        WorkflowReadRequest.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>WorkflowReadRequest</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/WorkflowReadRequest} obj Optional instance to populate.
     * @return {module:model/WorkflowReadRequest} The populated <code>WorkflowReadRequest</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new WorkflowReadRequest();

            if (data.hasOwnProperty('projectAndIssueTypes')) {
                obj['projectAndIssueTypes'] = ApiClient.convertToType(data['projectAndIssueTypes'], [ProjectAndIssueTypePair]);
            }
            if (data.hasOwnProperty('workflowIds')) {
                obj['workflowIds'] = ApiClient.convertToType(data['workflowIds'], ['String']);
            }
            if (data.hasOwnProperty('workflowNames')) {
                obj['workflowNames'] = ApiClient.convertToType(data['workflowNames'], ['String']);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>WorkflowReadRequest</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>WorkflowReadRequest</code>.
     */
    static validateJSON(data) {
        if (data['projectAndIssueTypes']) { // data not null
            // ensure the json data is an array
            if (!Array.isArray(data['projectAndIssueTypes'])) {
                throw new Error("Expected the field `projectAndIssueTypes` to be an array in the JSON data but got " + data['projectAndIssueTypes']);
            }
            // validate the optional field `projectAndIssueTypes` (array)
            for (const item of data['projectAndIssueTypes']) {
                ProjectAndIssueTypePair.validateJSON(item);
            };
        }
        // ensure the json data is an array
        if (!Array.isArray(data['workflowIds'])) {
            throw new Error("Expected the field `workflowIds` to be an array in the JSON data but got " + data['workflowIds']);
        }
        // ensure the json data is an array
        if (!Array.isArray(data['workflowNames'])) {
            throw new Error("Expected the field `workflowNames` to be an array in the JSON data but got " + data['workflowNames']);
        }

        return true;
    }


}



/**
 * The list of projects and issue types to query.
 * @member {Array.<module:model/ProjectAndIssueTypePair>} projectAndIssueTypes
 */
WorkflowReadRequest.prototype['projectAndIssueTypes'] = undefined;

/**
 * The list of workflow IDs to query.
 * @member {Array.<String>} workflowIds
 */
WorkflowReadRequest.prototype['workflowIds'] = undefined;

/**
 * The list of workflow names to query.
 * @member {Array.<String>} workflowNames
 */
WorkflowReadRequest.prototype['workflowNames'] = undefined;






export default WorkflowReadRequest;

