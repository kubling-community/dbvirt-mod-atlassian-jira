/**
 * The Jira Cloud platform REST API
 * Jira Cloud platform REST API documentation
 *
 * The version of the OpenAPI document: 1001.0.0-SNAPSHOT-122db9bd6b089919e6465ce52fdce319d5a9dfb4
 * Contact: ecosystem@atlassian.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import TargetToSourcesMapping from './TargetToSourcesMapping';

/**
 * The IssueBulkMovePayload model module.
 * @module model/IssueBulkMovePayload
 * @version 1001.0.0-SNAPSHOT-122db9bd6b089919e6465ce52fdce319d5a9dfb4
 */
class IssueBulkMovePayload {
    /**
     * Constructs a new <code>IssueBulkMovePayload</code>.
     * Issue Bulk Move Payload
     * @alias module:model/IssueBulkMovePayload
     */
    constructor() { 
        
        IssueBulkMovePayload.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>IssueBulkMovePayload</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/IssueBulkMovePayload} obj Optional instance to populate.
     * @return {module:model/IssueBulkMovePayload} The populated <code>IssueBulkMovePayload</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new IssueBulkMovePayload();

            if (data.hasOwnProperty('targetToSourcesMapping')) {
                obj['targetToSourcesMapping'] = ApiClient.convertToType(data['targetToSourcesMapping'], {'String': TargetToSourcesMapping});
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>IssueBulkMovePayload</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>IssueBulkMovePayload</code>.
     */
    static validateJSON(data) {

        return true;
    }


}



/**
 * An object representing the mapping of issues and data related to destination entities, like fields and statuses, that are required during a bulk move.  The key is a string that is created by concatenating the following three entities in order, separated by commas. The format is `<project ID or key>,<issueType ID>,<parent ID or key>`. It should be unique across mappings provided in the payload. If you provide multiple mappings for the same key, only one will be processed. However, the operation won't fail, so the error may be hard to track down.   *  ***Destination project*** (Required): ID or key of the project to which the issues are being moved.  *  ***Destination issueType*** (Required): ID of the issueType to which the issues are being moved.  *  ***Destination parent ID or key*** (Optional): ID or key of the issue which will become the parent of the issues being moved. Only required when the destination issueType is a subtask.
 * @member {Object.<String, module:model/TargetToSourcesMapping>} targetToSourcesMapping
 */
IssueBulkMovePayload.prototype['targetToSourcesMapping'] = undefined;






export default IssueBulkMovePayload;

