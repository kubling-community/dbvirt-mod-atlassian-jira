/**
 * The Jira Cloud platform REST API
 * Jira Cloud platform REST API documentation
 *
 * The version of the OpenAPI document: 1001.0.0-SNAPSHOT-122db9bd6b089919e6465ce52fdce319d5a9dfb4
 * Contact: ecosystem@atlassian.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The WorkflowSchemeAssociation model module.
 * @module model/WorkflowSchemeAssociation
 * @version 1001.0.0-SNAPSHOT-122db9bd6b089919e6465ce52fdce319d5a9dfb4
 */
class WorkflowSchemeAssociation {
    /**
     * Constructs a new <code>WorkflowSchemeAssociation</code>.
     * The explicit association between issue types and a workflow in a workflow scheme.
     * @alias module:model/WorkflowSchemeAssociation
     * @param issueTypeIds {Array.<String>} The issue types assigned to the workflow.
     * @param workflowId {String} The ID of the workflow.
     */
    constructor(issueTypeIds, workflowId) { 
        
        WorkflowSchemeAssociation.initialize(this, issueTypeIds, workflowId);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, issueTypeIds, workflowId) { 
        obj['issueTypeIds'] = issueTypeIds;
        obj['workflowId'] = workflowId;
    }

    /**
     * Constructs a <code>WorkflowSchemeAssociation</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/WorkflowSchemeAssociation} obj Optional instance to populate.
     * @return {module:model/WorkflowSchemeAssociation} The populated <code>WorkflowSchemeAssociation</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new WorkflowSchemeAssociation();

            if (data.hasOwnProperty('issueTypeIds')) {
                obj['issueTypeIds'] = ApiClient.convertToType(data['issueTypeIds'], ['String']);
            }
            if (data.hasOwnProperty('workflowId')) {
                obj['workflowId'] = ApiClient.convertToType(data['workflowId'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>WorkflowSchemeAssociation</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>WorkflowSchemeAssociation</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of WorkflowSchemeAssociation.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // ensure the json data is an array
        if (!Array.isArray(data['issueTypeIds'])) {
            throw new Error("Expected the field `issueTypeIds` to be an array in the JSON data but got " + data['issueTypeIds']);
        }
        // ensure the json data is a string
        if (data['workflowId'] && !(typeof data['workflowId'] === 'string' || data['workflowId'] instanceof String)) {
            throw new Error("Expected the field `workflowId` to be a primitive type in the JSON string but got " + data['workflowId']);
        }

        return true;
    }


}

WorkflowSchemeAssociation.RequiredProperties = ["issueTypeIds", "workflowId"];

/**
 * The issue types assigned to the workflow.
 * @member {Array.<String>} issueTypeIds
 */
WorkflowSchemeAssociation.prototype['issueTypeIds'] = undefined;

/**
 * The ID of the workflow.
 * @member {String} workflowId
 */
WorkflowSchemeAssociation.prototype['workflowId'] = undefined;






export default WorkflowSchemeAssociation;

