/**
 * The Jira Cloud platform REST API
 * Jira Cloud platform REST API documentation
 *
 * The version of the OpenAPI document: 1001.0.0-SNAPSHOT-122db9bd6b089919e6465ce52fdce319d5a9dfb4
 * Contact: ecosystem@atlassian.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import JiraLabelsInput from './JiraLabelsInput';

/**
 * The JiraLabelsField model module.
 * @module model/JiraLabelsField
 * @version 1001.0.0-SNAPSHOT-122db9bd6b089919e6465ce52fdce319d5a9dfb4
 */
class JiraLabelsField {
    /**
     * Constructs a new <code>JiraLabelsField</code>.
     * @alias module:model/JiraLabelsField
     * @param bulkEditMultiSelectFieldOption {module:model/JiraLabelsField.BulkEditMultiSelectFieldOptionEnum} 
     * @param fieldId {String} 
     * @param labels {Array.<module:model/JiraLabelsInput>} 
     */
    constructor(bulkEditMultiSelectFieldOption, fieldId, labels) { 
        
        JiraLabelsField.initialize(this, bulkEditMultiSelectFieldOption, fieldId, labels);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, bulkEditMultiSelectFieldOption, fieldId, labels) { 
        obj['bulkEditMultiSelectFieldOption'] = bulkEditMultiSelectFieldOption;
        obj['fieldId'] = fieldId;
        obj['labels'] = labels;
    }

    /**
     * Constructs a <code>JiraLabelsField</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/JiraLabelsField} obj Optional instance to populate.
     * @return {module:model/JiraLabelsField} The populated <code>JiraLabelsField</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new JiraLabelsField();

            if (data.hasOwnProperty('bulkEditMultiSelectFieldOption')) {
                obj['bulkEditMultiSelectFieldOption'] = ApiClient.convertToType(data['bulkEditMultiSelectFieldOption'], 'String');
            }
            if (data.hasOwnProperty('fieldId')) {
                obj['fieldId'] = ApiClient.convertToType(data['fieldId'], 'String');
            }
            if (data.hasOwnProperty('labels')) {
                obj['labels'] = ApiClient.convertToType(data['labels'], [JiraLabelsInput]);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>JiraLabelsField</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>JiraLabelsField</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of JiraLabelsField.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // ensure the json data is a string
        if (data['bulkEditMultiSelectFieldOption'] && !(typeof data['bulkEditMultiSelectFieldOption'] === 'string' || data['bulkEditMultiSelectFieldOption'] instanceof String)) {
            throw new Error("Expected the field `bulkEditMultiSelectFieldOption` to be a primitive type in the JSON string but got " + data['bulkEditMultiSelectFieldOption']);
        }
        // ensure the json data is a string
        if (data['fieldId'] && !(typeof data['fieldId'] === 'string' || data['fieldId'] instanceof String)) {
            throw new Error("Expected the field `fieldId` to be a primitive type in the JSON string but got " + data['fieldId']);
        }
        if (data['labels']) { // data not null
            // ensure the json data is an array
            if (!Array.isArray(data['labels'])) {
                throw new Error("Expected the field `labels` to be an array in the JSON data but got " + data['labels']);
            }
            // validate the optional field `labels` (array)
            for (const item of data['labels']) {
                JiraLabelsInput.validateJSON(item);
            };
        }

        return true;
    }


}

JiraLabelsField.RequiredProperties = ["bulkEditMultiSelectFieldOption", "fieldId", "labels"];

/**
 * @member {module:model/JiraLabelsField.BulkEditMultiSelectFieldOptionEnum} bulkEditMultiSelectFieldOption
 */
JiraLabelsField.prototype['bulkEditMultiSelectFieldOption'] = undefined;

/**
 * @member {String} fieldId
 */
JiraLabelsField.prototype['fieldId'] = undefined;

/**
 * @member {Array.<module:model/JiraLabelsInput>} labels
 */
JiraLabelsField.prototype['labels'] = undefined;





/**
 * Allowed values for the <code>bulkEditMultiSelectFieldOption</code> property.
 * @enum {String}
 * @readonly
 */
JiraLabelsField['BulkEditMultiSelectFieldOptionEnum'] = {

    /**
     * value: "ADD"
     * @const
     */
    "ADD": "ADD",

    /**
     * value: "REMOVE"
     * @const
     */
    "REMOVE": "REMOVE",

    /**
     * value: "REPLACE"
     * @const
     */
    "REPLACE": "REPLACE",

    /**
     * value: "REMOVE_ALL"
     * @const
     */
    "REMOVE_ALL": "REMOVE_ALL"
};



export default JiraLabelsField;

