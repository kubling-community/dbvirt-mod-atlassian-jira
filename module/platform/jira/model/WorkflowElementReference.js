/**
 * The Jira Cloud platform REST API
 * Jira Cloud platform REST API documentation
 *
 * The version of the OpenAPI document: 1001.0.0-SNAPSHOT-122db9bd6b089919e6465ce52fdce319d5a9dfb4
 * Contact: ecosystem@atlassian.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import ProjectAndIssueTypePair from './ProjectAndIssueTypePair';

/**
 * The WorkflowElementReference model module.
 * @module model/WorkflowElementReference
 * @version 1001.0.0-SNAPSHOT-122db9bd6b089919e6465ce52fdce319d5a9dfb4
 */
class WorkflowElementReference {
    /**
     * Constructs a new <code>WorkflowElementReference</code>.
     * A reference to the location of the error. This will be null if the error does not refer to a specific element.
     * @alias module:model/WorkflowElementReference
     */
    constructor() { 
        
        WorkflowElementReference.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>WorkflowElementReference</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/WorkflowElementReference} obj Optional instance to populate.
     * @return {module:model/WorkflowElementReference} The populated <code>WorkflowElementReference</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new WorkflowElementReference();

            if (data.hasOwnProperty('propertyKey')) {
                obj['propertyKey'] = ApiClient.convertToType(data['propertyKey'], 'String');
            }
            if (data.hasOwnProperty('ruleId')) {
                obj['ruleId'] = ApiClient.convertToType(data['ruleId'], 'String');
            }
            if (data.hasOwnProperty('statusMappingReference')) {
                obj['statusMappingReference'] = ProjectAndIssueTypePair.constructFromObject(data['statusMappingReference']);
            }
            if (data.hasOwnProperty('statusReference')) {
                obj['statusReference'] = ApiClient.convertToType(data['statusReference'], 'String');
            }
            if (data.hasOwnProperty('transitionId')) {
                obj['transitionId'] = ApiClient.convertToType(data['transitionId'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>WorkflowElementReference</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>WorkflowElementReference</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['propertyKey'] && !(typeof data['propertyKey'] === 'string' || data['propertyKey'] instanceof String)) {
            throw new Error("Expected the field `propertyKey` to be a primitive type in the JSON string but got " + data['propertyKey']);
        }
        // ensure the json data is a string
        if (data['ruleId'] && !(typeof data['ruleId'] === 'string' || data['ruleId'] instanceof String)) {
            throw new Error("Expected the field `ruleId` to be a primitive type in the JSON string but got " + data['ruleId']);
        }
        // validate the optional field `statusMappingReference`
        if (data['statusMappingReference']) { // data not null
          ProjectAndIssueTypePair.validateJSON(data['statusMappingReference']);
        }
        // ensure the json data is a string
        if (data['statusReference'] && !(typeof data['statusReference'] === 'string' || data['statusReference'] instanceof String)) {
            throw new Error("Expected the field `statusReference` to be a primitive type in the JSON string but got " + data['statusReference']);
        }
        // ensure the json data is a string
        if (data['transitionId'] && !(typeof data['transitionId'] === 'string' || data['transitionId'] instanceof String)) {
            throw new Error("Expected the field `transitionId` to be a primitive type in the JSON string but got " + data['transitionId']);
        }

        return true;
    }


}



/**
 * A property key.
 * @member {String} propertyKey
 */
WorkflowElementReference.prototype['propertyKey'] = undefined;

/**
 * A rule ID.
 * @member {String} ruleId
 */
WorkflowElementReference.prototype['ruleId'] = undefined;

/**
 * @member {module:model/ProjectAndIssueTypePair} statusMappingReference
 */
WorkflowElementReference.prototype['statusMappingReference'] = undefined;

/**
 * A status reference.
 * @member {String} statusReference
 */
WorkflowElementReference.prototype['statusReference'] = undefined;

/**
 * A transition ID.
 * @member {String} transitionId
 */
WorkflowElementReference.prototype['transitionId'] = undefined;






export default WorkflowElementReference;

