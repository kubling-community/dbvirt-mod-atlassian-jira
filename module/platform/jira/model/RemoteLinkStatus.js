/**
 * Jira Software Cloud API
 * Jira Software Cloud REST API documentation
 *
 * The version of the OpenAPI document: 1001.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The RemoteLinkStatus model module.
 * @module model/RemoteLinkStatus
 * @version 1001.0.0
 */
class RemoteLinkStatus {
    /**
     * Constructs a new <code>RemoteLinkStatus</code>.
     * The status of a Remote Link. 
     * @alias module:model/RemoteLinkStatus
     * @param appearance {module:model/RemoteLinkStatus.AppearanceEnum} Appearance is a fixed set of appearance types affecting the colour of the status lozenge in the UI. The colours they correspond to are equivalent to atlaskit's [Lozenge](https://atlaskit.atlassian.com/packages/core/lozenge) component. 
     * @param label {String} The human-readable description for the Remote Link status.  Will be shown in the UI. 
     */
    constructor(appearance, label) { 
        
        RemoteLinkStatus.initialize(this, appearance, label);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, appearance, label) { 
        obj['appearance'] = appearance;
        obj['label'] = label;
    }

    /**
     * Constructs a <code>RemoteLinkStatus</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/RemoteLinkStatus} obj Optional instance to populate.
     * @return {module:model/RemoteLinkStatus} The populated <code>RemoteLinkStatus</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new RemoteLinkStatus();

            if (data.hasOwnProperty('appearance')) {
                obj['appearance'] = ApiClient.convertToType(data['appearance'], 'String');
            }
            if (data.hasOwnProperty('label')) {
                obj['label'] = ApiClient.convertToType(data['label'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>RemoteLinkStatus</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>RemoteLinkStatus</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of RemoteLinkStatus.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // ensure the json data is a string
        if (data['appearance'] && !(typeof data['appearance'] === 'string' || data['appearance'] instanceof String)) {
            throw new Error("Expected the field `appearance` to be a primitive type in the JSON string but got " + data['appearance']);
        }
        // ensure the json data is a string
        if (data['label'] && !(typeof data['label'] === 'string' || data['label'] instanceof String)) {
            throw new Error("Expected the field `label` to be a primitive type in the JSON string but got " + data['label']);
        }

        return true;
    }


}

RemoteLinkStatus.RequiredProperties = ["appearance", "label"];

/**
 * Appearance is a fixed set of appearance types affecting the colour of the status lozenge in the UI. The colours they correspond to are equivalent to atlaskit's [Lozenge](https://atlaskit.atlassian.com/packages/core/lozenge) component. 
 * @member {module:model/RemoteLinkStatus.AppearanceEnum} appearance
 */
RemoteLinkStatus.prototype['appearance'] = undefined;

/**
 * The human-readable description for the Remote Link status.  Will be shown in the UI. 
 * @member {String} label
 */
RemoteLinkStatus.prototype['label'] = undefined;





/**
 * Allowed values for the <code>appearance</code> property.
 * @enum {String}
 * @readonly
 */
RemoteLinkStatus['AppearanceEnum'] = {

    /**
     * value: "default"
     * @const
     */
    "default": "default",

    /**
     * value: "inprogress"
     * @const
     */
    "inprogress": "inprogress",

    /**
     * value: "moved"
     * @const
     */
    "moved": "moved",

    /**
     * value: "new"
     * @const
     */
    "new": "new",

    /**
     * value: "removed"
     * @const
     */
    "removed": "removed",

    /**
     * value: "prototype"
     * @const
     */
    "prototype": "prototype",

    /**
     * value: "success"
     * @const
     */
    "success": "success"
};



export default RemoteLinkStatus;

