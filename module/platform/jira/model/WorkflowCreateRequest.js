/**
 * The Jira Cloud platform REST API
 * Jira Cloud platform REST API documentation
 *
 * The version of the OpenAPI document: 1001.0.0-SNAPSHOT-122db9bd6b089919e6465ce52fdce319d5a9dfb4
 * Contact: ecosystem@atlassian.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import WorkflowCreate from './WorkflowCreate';
import WorkflowScope from './WorkflowScope';
import WorkflowStatusUpdate from './WorkflowStatusUpdate';

/**
 * The WorkflowCreateRequest model module.
 * @module model/WorkflowCreateRequest
 * @version 1001.0.0-SNAPSHOT-122db9bd6b089919e6465ce52fdce319d5a9dfb4
 */
class WorkflowCreateRequest {
    /**
     * Constructs a new <code>WorkflowCreateRequest</code>.
     * The create workflows payload.
     * @alias module:model/WorkflowCreateRequest
     * @param scope {module:model/WorkflowScope} 
     * @param statuses {Array.<module:model/WorkflowStatusUpdate>} The statuses to associate with the workflows.
     * @param workflows {Array.<module:model/WorkflowCreate>} The details of the workflows to create.
     */
    constructor(scope, statuses, workflows) { 
        
        WorkflowCreateRequest.initialize(this, scope, statuses, workflows);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, scope, statuses, workflows) { 
        obj['scope'] = scope;
        obj['statuses'] = statuses;
        obj['workflows'] = workflows;
    }

    /**
     * Constructs a <code>WorkflowCreateRequest</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/WorkflowCreateRequest} obj Optional instance to populate.
     * @return {module:model/WorkflowCreateRequest} The populated <code>WorkflowCreateRequest</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new WorkflowCreateRequest();

            if (data.hasOwnProperty('scope')) {
                obj['scope'] = WorkflowScope.constructFromObject(data['scope']);
            }
            if (data.hasOwnProperty('statuses')) {
                obj['statuses'] = ApiClient.convertToType(data['statuses'], [WorkflowStatusUpdate]);
            }
            if (data.hasOwnProperty('workflows')) {
                obj['workflows'] = ApiClient.convertToType(data['workflows'], [WorkflowCreate]);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>WorkflowCreateRequest</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>WorkflowCreateRequest</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of WorkflowCreateRequest.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // validate the optional field `scope`
        if (data['scope']) { // data not null
          WorkflowScope.validateJSON(data['scope']);
        }
        // ensure the json data is an array
        if (!Array.isArray(data['statuses'])) {
            throw new Error("Expected the field `statuses` to be an array in the JSON data but got " + data['statuses']);
        }
        if (data['workflows']) { // data not null
            // ensure the json data is an array
            if (!Array.isArray(data['workflows'])) {
                throw new Error("Expected the field `workflows` to be an array in the JSON data but got " + data['workflows']);
            }
            // validate the optional field `workflows` (array)
            for (const item of data['workflows']) {
                WorkflowCreate.validateJSON(item);
            };
        }

        return true;
    }


}

WorkflowCreateRequest.RequiredProperties = ["scope", "statuses", "workflows"];

/**
 * @member {module:model/WorkflowScope} scope
 */
WorkflowCreateRequest.prototype['scope'] = undefined;

/**
 * The statuses to associate with the workflows.
 * @member {Array.<module:model/WorkflowStatusUpdate>} statuses
 */
WorkflowCreateRequest.prototype['statuses'] = undefined;

/**
 * The details of the workflows to create.
 * @member {Array.<module:model/WorkflowCreate>} workflows
 */
WorkflowCreateRequest.prototype['workflows'] = undefined;






export default WorkflowCreateRequest;

