/**
 * The Jira Cloud platform REST API
 * Jira Cloud platform REST API documentation
 *
 * The version of the OpenAPI document: 1001.0.0-SNAPSHOT-122db9bd6b089919e6465ce52fdce319d5a9dfb4
 * Contact: ecosystem@atlassian.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The DateRangeFilterRequest model module.
 * @module model/DateRangeFilterRequest
 * @version 1001.0.0-SNAPSHOT-122db9bd6b089919e6465ce52fdce319d5a9dfb4
 */
class DateRangeFilterRequest {
    /**
     * Constructs a new <code>DateRangeFilterRequest</code>.
     * List issues archived within a specified date range.
     * @alias module:model/DateRangeFilterRequest
     * @param dateAfter {String} List issues archived after a specified date, passed in the YYYY-MM-DD format.
     * @param dateBefore {String} List issues archived before a specified date provided in the YYYY-MM-DD format.
     */
    constructor(dateAfter, dateBefore) { 
        
        DateRangeFilterRequest.initialize(this, dateAfter, dateBefore);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, dateAfter, dateBefore) { 
        obj['dateAfter'] = dateAfter;
        obj['dateBefore'] = dateBefore;
    }

    /**
     * Constructs a <code>DateRangeFilterRequest</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/DateRangeFilterRequest} obj Optional instance to populate.
     * @return {module:model/DateRangeFilterRequest} The populated <code>DateRangeFilterRequest</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new DateRangeFilterRequest();

            if (data.hasOwnProperty('dateAfter')) {
                obj['dateAfter'] = ApiClient.convertToType(data['dateAfter'], 'String');
            }
            if (data.hasOwnProperty('dateBefore')) {
                obj['dateBefore'] = ApiClient.convertToType(data['dateBefore'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>DateRangeFilterRequest</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>DateRangeFilterRequest</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of DateRangeFilterRequest.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // ensure the json data is a string
        if (data['dateAfter'] && !(typeof data['dateAfter'] === 'string' || data['dateAfter'] instanceof String)) {
            throw new Error("Expected the field `dateAfter` to be a primitive type in the JSON string but got " + data['dateAfter']);
        }
        // ensure the json data is a string
        if (data['dateBefore'] && !(typeof data['dateBefore'] === 'string' || data['dateBefore'] instanceof String)) {
            throw new Error("Expected the field `dateBefore` to be a primitive type in the JSON string but got " + data['dateBefore']);
        }

        return true;
    }


}

DateRangeFilterRequest.RequiredProperties = ["dateAfter", "dateBefore"];

/**
 * List issues archived after a specified date, passed in the YYYY-MM-DD format.
 * @member {String} dateAfter
 */
DateRangeFilterRequest.prototype['dateAfter'] = undefined;

/**
 * List issues archived before a specified date provided in the YYYY-MM-DD format.
 * @member {String} dateBefore
 */
DateRangeFilterRequest.prototype['dateBefore'] = undefined;






export default DateRangeFilterRequest;

