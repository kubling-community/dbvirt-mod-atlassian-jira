/**
 * The Jira Cloud platform REST API
 * Jira Cloud platform REST API documentation
 *
 * The version of the OpenAPI document: 1001.0.0-SNAPSHOT-122db9bd6b089919e6465ce52fdce319d5a9dfb4
 * Contact: ecosystem@atlassian.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import JiraIssueFields from './JiraIssueFields';

/**
 * The IssueBulkEditPayload model module.
 * @module model/IssueBulkEditPayload
 * @version 1001.0.0-SNAPSHOT-122db9bd6b089919e6465ce52fdce319d5a9dfb4
 */
class IssueBulkEditPayload {
    /**
     * Constructs a new <code>IssueBulkEditPayload</code>.
     * Issue Bulk Edit Payload
     * @alias module:model/IssueBulkEditPayload
     * @param editedFieldsInput {module:model/JiraIssueFields} An object that defines the values to be updated in specified fields of an issue. The structure and content of this parameter vary depending on the type of field being edited. Although the order is not significant, ensure that field IDs align with those in selectedActions.
     * @param selectedActions {Array.<String>} List of all the field IDs that are to be bulk edited. Each field ID in this list corresponds to a specific attribute of an issue that is set to be modified in the bulk edit operation. The relevant field ID can be obtained by calling the Bulk Edit Get Fields REST API (documentation available on this page itself).
     * @param selectedIssueIdsOrKeys {Array.<String>} List of issue IDs or keys which are to be bulk edited. These IDs or keys can be from different projects and issue types.
     */
    constructor(editedFieldsInput, selectedActions, selectedIssueIdsOrKeys) { 
        
        IssueBulkEditPayload.initialize(this, editedFieldsInput, selectedActions, selectedIssueIdsOrKeys);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, editedFieldsInput, selectedActions, selectedIssueIdsOrKeys) { 
        obj['editedFieldsInput'] = editedFieldsInput;
        obj['selectedActions'] = selectedActions;
        obj['selectedIssueIdsOrKeys'] = selectedIssueIdsOrKeys;
    }

    /**
     * Constructs a <code>IssueBulkEditPayload</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/IssueBulkEditPayload} obj Optional instance to populate.
     * @return {module:model/IssueBulkEditPayload} The populated <code>IssueBulkEditPayload</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new IssueBulkEditPayload();

            if (data.hasOwnProperty('editedFieldsInput')) {
                obj['editedFieldsInput'] = ApiClient.convertToType(data['editedFieldsInput'], JiraIssueFields);
            }
            if (data.hasOwnProperty('selectedActions')) {
                obj['selectedActions'] = ApiClient.convertToType(data['selectedActions'], ['String']);
            }
            if (data.hasOwnProperty('selectedIssueIdsOrKeys')) {
                obj['selectedIssueIdsOrKeys'] = ApiClient.convertToType(data['selectedIssueIdsOrKeys'], ['String']);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>IssueBulkEditPayload</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>IssueBulkEditPayload</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of IssueBulkEditPayload.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // validate the optional field `editedFieldsInput`
        if (data['editedFieldsInput']) { // data not null
          JiraIssueFields.validateJSON(data['editedFieldsInput']);
        }
        // ensure the json data is an array
        if (!Array.isArray(data['selectedActions'])) {
            throw new Error("Expected the field `selectedActions` to be an array in the JSON data but got " + data['selectedActions']);
        }
        // ensure the json data is an array
        if (!Array.isArray(data['selectedIssueIdsOrKeys'])) {
            throw new Error("Expected the field `selectedIssueIdsOrKeys` to be an array in the JSON data but got " + data['selectedIssueIdsOrKeys']);
        }

        return true;
    }


}

IssueBulkEditPayload.RequiredProperties = ["editedFieldsInput", "selectedActions", "selectedIssueIdsOrKeys"];

/**
 * An object that defines the values to be updated in specified fields of an issue. The structure and content of this parameter vary depending on the type of field being edited. Although the order is not significant, ensure that field IDs align with those in selectedActions.
 * @member {module:model/JiraIssueFields} editedFieldsInput
 */
IssueBulkEditPayload.prototype['editedFieldsInput'] = undefined;

/**
 * List of all the field IDs that are to be bulk edited. Each field ID in this list corresponds to a specific attribute of an issue that is set to be modified in the bulk edit operation. The relevant field ID can be obtained by calling the Bulk Edit Get Fields REST API (documentation available on this page itself).
 * @member {Array.<String>} selectedActions
 */
IssueBulkEditPayload.prototype['selectedActions'] = undefined;

/**
 * List of issue IDs or keys which are to be bulk edited. These IDs or keys can be from different projects and issue types.
 * @member {Array.<String>} selectedIssueIdsOrKeys
 */
IssueBulkEditPayload.prototype['selectedIssueIdsOrKeys'] = undefined;






export default IssueBulkEditPayload;

