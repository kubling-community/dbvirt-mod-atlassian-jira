/**
 * Jira Software Cloud API
 * Jira Software Cloud REST API documentation
 *
 * The version of the OpenAPI document: 1001.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import BuildCommitReference from './BuildCommitReference';
import BuildRefReference from './BuildRefReference';

/**
 * The BuildReferences model module.
 * @module model/BuildReferences
 * @version 1001.0.0
 */
class BuildReferences {
    /**
     * Constructs a new <code>BuildReferences</code>.
     * Information that links a build to a commit, branch etc.  Used to provide a richer user experience by enabling us to associate builds from your system with e.g. branches / commits / tags etc. supplied by another app in the Jira UI. 
     * @alias module:model/BuildReferences
     */
    constructor() { 
        
        BuildReferences.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>BuildReferences</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/BuildReferences} obj Optional instance to populate.
     * @return {module:model/BuildReferences} The populated <code>BuildReferences</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new BuildReferences();

            if (data.hasOwnProperty('commit')) {
                obj['commit'] = BuildCommitReference.constructFromObject(data['commit']);
            }
            if (data.hasOwnProperty('ref')) {
                obj['ref'] = BuildRefReference.constructFromObject(data['ref']);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>BuildReferences</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>BuildReferences</code>.
     */
    static validateJSON(data) {
        // validate the optional field `commit`
        if (data['commit']) { // data not null
          BuildCommitReference.validateJSON(data['commit']);
        }
        // validate the optional field `ref`
        if (data['ref']) { // data not null
          BuildRefReference.validateJSON(data['ref']);
        }

        return true;
    }


}



/**
 * @member {module:model/BuildCommitReference} commit
 */
BuildReferences.prototype['commit'] = undefined;

/**
 * @member {module:model/BuildRefReference} ref
 */
BuildReferences.prototype['ref'] = undefined;






export default BuildReferences;

