/**
 * The Jira Cloud platform REST API
 * Jira Cloud platform REST API documentation
 *
 * The version of the OpenAPI document: 1001.0.0-SNAPSHOT-122db9bd6b089919e6465ce52fdce319d5a9dfb4
 * Contact: ecosystem@atlassian.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import PageBeanPriorityWithSequence from './PageBeanPriorityWithSequence';
import PageBeanProjectDetails from './PageBeanProjectDetails';

/**
 * The PrioritySchemeWithPaginatedPrioritiesAndProjects model module.
 * @module model/PrioritySchemeWithPaginatedPrioritiesAndProjects
 * @version 1001.0.0-SNAPSHOT-122db9bd6b089919e6465ce52fdce319d5a9dfb4
 */
class PrioritySchemeWithPaginatedPrioritiesAndProjects {
    /**
     * Constructs a new <code>PrioritySchemeWithPaginatedPrioritiesAndProjects</code>.
     * A priority scheme with paginated priorities and projects.
     * @alias module:model/PrioritySchemeWithPaginatedPrioritiesAndProjects
     * @extends Object
     * @param id {String} The ID of the priority scheme.
     * @param name {String} The name of the priority scheme
     */
    constructor(id, name) { 
        
        PrioritySchemeWithPaginatedPrioritiesAndProjects.initialize(this, id, name);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, id, name) { 
        obj['id'] = id;
        obj['name'] = name;
    }

    /**
     * Constructs a <code>PrioritySchemeWithPaginatedPrioritiesAndProjects</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/PrioritySchemeWithPaginatedPrioritiesAndProjects} obj Optional instance to populate.
     * @return {module:model/PrioritySchemeWithPaginatedPrioritiesAndProjects} The populated <code>PrioritySchemeWithPaginatedPrioritiesAndProjects</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new PrioritySchemeWithPaginatedPrioritiesAndProjects();

            ApiClient.constructFromObject(data, obj, 'Object');
            

            if (data.hasOwnProperty('default')) {
                obj['default'] = ApiClient.convertToType(data['default'], 'Boolean');
            }
            if (data.hasOwnProperty('defaultPriorityId')) {
                obj['defaultPriorityId'] = ApiClient.convertToType(data['defaultPriorityId'], 'String');
            }
            if (data.hasOwnProperty('description')) {
                obj['description'] = ApiClient.convertToType(data['description'], 'String');
            }
            if (data.hasOwnProperty('id')) {
                obj['id'] = ApiClient.convertToType(data['id'], 'String');
            }
            if (data.hasOwnProperty('isDefault')) {
                obj['isDefault'] = ApiClient.convertToType(data['isDefault'], 'Boolean');
            }
            if (data.hasOwnProperty('name')) {
                obj['name'] = ApiClient.convertToType(data['name'], 'String');
            }
            if (data.hasOwnProperty('priorities')) {
                obj['priorities'] = ApiClient.convertToType(data['priorities'], PageBeanPriorityWithSequence);
            }
            if (data.hasOwnProperty('projects')) {
                obj['projects'] = ApiClient.convertToType(data['projects'], PageBeanProjectDetails);
            }
            if (data.hasOwnProperty('self')) {
                obj['self'] = ApiClient.convertToType(data['self'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>PrioritySchemeWithPaginatedPrioritiesAndProjects</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>PrioritySchemeWithPaginatedPrioritiesAndProjects</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of PrioritySchemeWithPaginatedPrioritiesAndProjects.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // ensure the json data is a string
        if (data['defaultPriorityId'] && !(typeof data['defaultPriorityId'] === 'string' || data['defaultPriorityId'] instanceof String)) {
            throw new Error("Expected the field `defaultPriorityId` to be a primitive type in the JSON string but got " + data['defaultPriorityId']);
        }
        // ensure the json data is a string
        if (data['description'] && !(typeof data['description'] === 'string' || data['description'] instanceof String)) {
            throw new Error("Expected the field `description` to be a primitive type in the JSON string but got " + data['description']);
        }
        // ensure the json data is a string
        if (data['id'] && !(typeof data['id'] === 'string' || data['id'] instanceof String)) {
            throw new Error("Expected the field `id` to be a primitive type in the JSON string but got " + data['id']);
        }
        // ensure the json data is a string
        if (data['name'] && !(typeof data['name'] === 'string' || data['name'] instanceof String)) {
            throw new Error("Expected the field `name` to be a primitive type in the JSON string but got " + data['name']);
        }
        // validate the optional field `priorities`
        if (data['priorities']) { // data not null
          PageBeanPriorityWithSequence.validateJSON(data['priorities']);
        }
        // validate the optional field `projects`
        if (data['projects']) { // data not null
          PageBeanProjectDetails.validateJSON(data['projects']);
        }
        // ensure the json data is a string
        if (data['self'] && !(typeof data['self'] === 'string' || data['self'] instanceof String)) {
            throw new Error("Expected the field `self` to be a primitive type in the JSON string but got " + data['self']);
        }

        return true;
    }


}

PrioritySchemeWithPaginatedPrioritiesAndProjects.RequiredProperties = ["id", "name"];

/**
 * @member {Boolean} default
 */
PrioritySchemeWithPaginatedPrioritiesAndProjects.prototype['default'] = undefined;

/**
 * The ID of the default issue priority.
 * @member {String} defaultPriorityId
 */
PrioritySchemeWithPaginatedPrioritiesAndProjects.prototype['defaultPriorityId'] = undefined;

/**
 * The description of the priority scheme
 * @member {String} description
 */
PrioritySchemeWithPaginatedPrioritiesAndProjects.prototype['description'] = undefined;

/**
 * The ID of the priority scheme.
 * @member {String} id
 */
PrioritySchemeWithPaginatedPrioritiesAndProjects.prototype['id'] = undefined;

/**
 * @member {Boolean} isDefault
 */
PrioritySchemeWithPaginatedPrioritiesAndProjects.prototype['isDefault'] = undefined;

/**
 * The name of the priority scheme
 * @member {String} name
 */
PrioritySchemeWithPaginatedPrioritiesAndProjects.prototype['name'] = undefined;

/**
 * The paginated list of priorities.
 * @member {module:model/PageBeanPriorityWithSequence} priorities
 */
PrioritySchemeWithPaginatedPrioritiesAndProjects.prototype['priorities'] = undefined;

/**
 * The paginated list of projects.
 * @member {module:model/PageBeanProjectDetails} projects
 */
PrioritySchemeWithPaginatedPrioritiesAndProjects.prototype['projects'] = undefined;

/**
 * The URL of the priority scheme.
 * @member {String} self
 */
PrioritySchemeWithPaginatedPrioritiesAndProjects.prototype['self'] = undefined;






export default PrioritySchemeWithPaginatedPrioritiesAndProjects;

