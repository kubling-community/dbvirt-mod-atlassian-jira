/**
 * Jira Software Cloud API
 * Jira Software Cloud REST API documentation
 *
 * The version of the OpenAPI document: 1001.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import EntityError from './EntityError';
import ErrorMessage from './ErrorMessage';

/**
 * The StoreDevinfoResultFailedDevinfoEntitiesValue model module.
 * @module model/StoreDevinfoResultFailedDevinfoEntitiesValue
 * @version 1001.0.0
 */
class StoreDevinfoResultFailedDevinfoEntitiesValue {
    /**
     * Constructs a new <code>StoreDevinfoResultFailedDevinfoEntitiesValue</code>.
     * Represents errors related to a particular repository and its entities
     * @alias module:model/StoreDevinfoResultFailedDevinfoEntitiesValue
     */
    constructor() { 
        
        StoreDevinfoResultFailedDevinfoEntitiesValue.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>StoreDevinfoResultFailedDevinfoEntitiesValue</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/StoreDevinfoResultFailedDevinfoEntitiesValue} obj Optional instance to populate.
     * @return {module:model/StoreDevinfoResultFailedDevinfoEntitiesValue} The populated <code>StoreDevinfoResultFailedDevinfoEntitiesValue</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new StoreDevinfoResultFailedDevinfoEntitiesValue();

            if (data.hasOwnProperty('errorMessages')) {
                obj['errorMessages'] = ApiClient.convertToType(data['errorMessages'], [ErrorMessage]);
            }
            if (data.hasOwnProperty('commits')) {
                obj['commits'] = ApiClient.convertToType(data['commits'], [EntityError]);
            }
            if (data.hasOwnProperty('branches')) {
                obj['branches'] = ApiClient.convertToType(data['branches'], [EntityError]);
            }
            if (data.hasOwnProperty('pullRequests')) {
                obj['pullRequests'] = ApiClient.convertToType(data['pullRequests'], [EntityError]);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>StoreDevinfoResultFailedDevinfoEntitiesValue</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>StoreDevinfoResultFailedDevinfoEntitiesValue</code>.
     */
    static validateJSON(data) {
        if (data['errorMessages']) { // data not null
            // ensure the json data is an array
            if (!Array.isArray(data['errorMessages'])) {
                throw new Error("Expected the field `errorMessages` to be an array in the JSON data but got " + data['errorMessages']);
            }
            // validate the optional field `errorMessages` (array)
            for (const item of data['errorMessages']) {
                ErrorMessage.validateJSON(item);
            };
        }
        if (data['commits']) { // data not null
            // ensure the json data is an array
            if (!Array.isArray(data['commits'])) {
                throw new Error("Expected the field `commits` to be an array in the JSON data but got " + data['commits']);
            }
            // validate the optional field `commits` (array)
            for (const item of data['commits']) {
                EntityError.validateJSON(item);
            };
        }
        if (data['branches']) { // data not null
            // ensure the json data is an array
            if (!Array.isArray(data['branches'])) {
                throw new Error("Expected the field `branches` to be an array in the JSON data but got " + data['branches']);
            }
            // validate the optional field `branches` (array)
            for (const item of data['branches']) {
                EntityError.validateJSON(item);
            };
        }
        if (data['pullRequests']) { // data not null
            // ensure the json data is an array
            if (!Array.isArray(data['pullRequests'])) {
                throw new Error("Expected the field `pullRequests` to be an array in the JSON data but got " + data['pullRequests']);
            }
            // validate the optional field `pullRequests` (array)
            for (const item of data['pullRequests']) {
                EntityError.validateJSON(item);
            };
        }

        return true;
    }


}



/**
 * Repository errors
 * @member {Array.<module:model/ErrorMessage>} errorMessages
 */
StoreDevinfoResultFailedDevinfoEntitiesValue.prototype['errorMessages'] = undefined;

/**
 * Commits errors
 * @member {Array.<module:model/EntityError>} commits
 */
StoreDevinfoResultFailedDevinfoEntitiesValue.prototype['commits'] = undefined;

/**
 * Branches errors
 * @member {Array.<module:model/EntityError>} branches
 */
StoreDevinfoResultFailedDevinfoEntitiesValue.prototype['branches'] = undefined;

/**
 * Pull requests errors
 * @member {Array.<module:model/EntityError>} pullRequests
 */
StoreDevinfoResultFailedDevinfoEntitiesValue.prototype['pullRequests'] = undefined;






export default StoreDevinfoResultFailedDevinfoEntitiesValue;

