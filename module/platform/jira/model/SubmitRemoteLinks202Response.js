/**
 * Jira Software Cloud API
 * Jira Software Cloud REST API documentation
 *
 * The version of the OpenAPI document: 1001.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import RemoteLinkDataAssociationsInner from './RemoteLinkDataAssociationsInner';
import SubmitRemoteLinks202ResponseRejectedRemoteLinksValueInner from './SubmitRemoteLinks202ResponseRejectedRemoteLinksValueInner';

/**
 * The SubmitRemoteLinks202Response model module.
 * @module model/SubmitRemoteLinks202Response
 * @version 1001.0.0
 */
class SubmitRemoteLinks202Response {
    /**
     * Constructs a new <code>SubmitRemoteLinks202Response</code>.
     * The result of a successful &#x60;submitRemoteLinks&#x60; request. 
     * @alias module:model/SubmitRemoteLinks202Response
     */
    constructor() { 
        
        SubmitRemoteLinks202Response.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>SubmitRemoteLinks202Response</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/SubmitRemoteLinks202Response} obj Optional instance to populate.
     * @return {module:model/SubmitRemoteLinks202Response} The populated <code>SubmitRemoteLinks202Response</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new SubmitRemoteLinks202Response();

            if (data.hasOwnProperty('acceptedRemoteLinks')) {
                obj['acceptedRemoteLinks'] = ApiClient.convertToType(data['acceptedRemoteLinks'], ['String']);
            }
            if (data.hasOwnProperty('rejectedRemoteLinks')) {
                obj['rejectedRemoteLinks'] = ApiClient.convertToType(data['rejectedRemoteLinks'], {'String': [SubmitRemoteLinks202ResponseRejectedRemoteLinksValueInner]});
            }
            if (data.hasOwnProperty('unknownAssociations')) {
                obj['unknownAssociations'] = ApiClient.convertToType(data['unknownAssociations'], [RemoteLinkDataAssociationsInner]);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>SubmitRemoteLinks202Response</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>SubmitRemoteLinks202Response</code>.
     */
    static validateJSON(data) {
        // ensure the json data is an array
        if (!Array.isArray(data['acceptedRemoteLinks'])) {
            throw new Error("Expected the field `acceptedRemoteLinks` to be an array in the JSON data but got " + data['acceptedRemoteLinks']);
        }
        if (data['unknownAssociations']) { // data not null
            // ensure the json data is an array
            if (!Array.isArray(data['unknownAssociations'])) {
                throw new Error("Expected the field `unknownAssociations` to be an array in the JSON data but got " + data['unknownAssociations']);
            }
            // validate the optional field `unknownAssociations` (array)
            for (const item of data['unknownAssociations']) {
                RemoteLinkDataAssociationsInner.validateJSON(item);
            };
        }

        return true;
    }


}



/**
 * The IDs of Remote Links that have been accepted for submission.  A Remote Link may be rejected if it was only associated with unknown issue keys, unknown service IDs, or if the submitted data for that Remote Link does not match the required schema.  Note that a Remote Link that isn't updated due to it's `updateSequenceNumber` being out of order is not considered a failed submission. 
 * @member {Array.<String>} acceptedRemoteLinks
 */
SubmitRemoteLinks202Response.prototype['acceptedRemoteLinks'] = undefined;

/**
 * Details of Remote Links that have not been accepted for submission, usually due to a problem with the request data.  A Remote Link may be rejected if it was only associated with unknown issue keys, unknown service IDs, or if the submitted data for the Remote Link does not match the required schema.  The object (if present) will be keyed by Remote Link ID and include any errors associated with that Remote Link that have prevented it being submitted. 
 * @member {Object.<String, Array.<module:model/SubmitRemoteLinks202ResponseRejectedRemoteLinksValueInner>>} rejectedRemoteLinks
 */
SubmitRemoteLinks202Response.prototype['rejectedRemoteLinks'] = undefined;

/**
 * Issue keys or services IDs or keys that are not known on this Jira instance (if any). 
 * @member {Array.<module:model/RemoteLinkDataAssociationsInner>} unknownAssociations
 */
SubmitRemoteLinks202Response.prototype['unknownAssociations'] = undefined;






export default SubmitRemoteLinks202Response;

