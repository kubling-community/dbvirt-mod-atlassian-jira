/**
 * The Jira Cloud platform REST API
 * Jira Cloud platform REST API documentation
 *
 * The version of the OpenAPI document: 1001.0.0-SNAPSHOT-122db9bd6b089919e6465ce52fdce319d5a9dfb4
 * Contact: ecosystem@atlassian.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import User from './User';

/**
 * The BulkOperationProgress model module.
 * @module model/BulkOperationProgress
 * @version 1001.0.0-SNAPSHOT-122db9bd6b089919e6465ce52fdce319d5a9dfb4
 */
class BulkOperationProgress {
    /**
     * Constructs a new <code>BulkOperationProgress</code>.
     * @alias module:model/BulkOperationProgress
     */
    constructor() { 
        
        BulkOperationProgress.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>BulkOperationProgress</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/BulkOperationProgress} obj Optional instance to populate.
     * @return {module:model/BulkOperationProgress} The populated <code>BulkOperationProgress</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new BulkOperationProgress();

            if (data.hasOwnProperty('created')) {
                obj['created'] = ApiClient.convertToType(data['created'], 'Date');
            }
            if (data.hasOwnProperty('failedAccessibleIssues')) {
                obj['failedAccessibleIssues'] = ApiClient.convertToType(data['failedAccessibleIssues'], {'String': ['String']});
            }
            if (data.hasOwnProperty('invalidOrInaccessibleIssueCount')) {
                obj['invalidOrInaccessibleIssueCount'] = ApiClient.convertToType(data['invalidOrInaccessibleIssueCount'], 'Number');
            }
            if (data.hasOwnProperty('processedAccessibleIssues')) {
                obj['processedAccessibleIssues'] = ApiClient.convertToType(data['processedAccessibleIssues'], ['Number']);
            }
            if (data.hasOwnProperty('progressPercent')) {
                obj['progressPercent'] = ApiClient.convertToType(data['progressPercent'], 'Number');
            }
            if (data.hasOwnProperty('started')) {
                obj['started'] = ApiClient.convertToType(data['started'], 'Date');
            }
            if (data.hasOwnProperty('status')) {
                obj['status'] = ApiClient.convertToType(data['status'], 'String');
            }
            if (data.hasOwnProperty('submittedBy')) {
                obj['submittedBy'] = User.constructFromObject(data['submittedBy']);
            }
            if (data.hasOwnProperty('taskId')) {
                obj['taskId'] = ApiClient.convertToType(data['taskId'], 'String');
            }
            if (data.hasOwnProperty('totalIssueCount')) {
                obj['totalIssueCount'] = ApiClient.convertToType(data['totalIssueCount'], 'Number');
            }
            if (data.hasOwnProperty('updated')) {
                obj['updated'] = ApiClient.convertToType(data['updated'], 'Date');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>BulkOperationProgress</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>BulkOperationProgress</code>.
     */
    static validateJSON(data) {
        // ensure the json data is an array
        if (!Array.isArray(data['processedAccessibleIssues'])) {
            throw new Error("Expected the field `processedAccessibleIssues` to be an array in the JSON data but got " + data['processedAccessibleIssues']);
        }
        // ensure the json data is a string
        if (data['status'] && !(typeof data['status'] === 'string' || data['status'] instanceof String)) {
            throw new Error("Expected the field `status` to be a primitive type in the JSON string but got " + data['status']);
        }
        // validate the optional field `submittedBy`
        if (data['submittedBy']) { // data not null
          User.validateJSON(data['submittedBy']);
        }
        // ensure the json data is a string
        if (data['taskId'] && !(typeof data['taskId'] === 'string' || data['taskId'] instanceof String)) {
            throw new Error("Expected the field `taskId` to be a primitive type in the JSON string but got " + data['taskId']);
        }

        return true;
    }


}



/**
 * A timestamp of when the task was submitted.
 * @member {Date} created
 */
BulkOperationProgress.prototype['created'] = undefined;

/**
 * Map of issue IDs for which the operation failed and that the user has permission to view, to their one or more reasons for failure. These reasons are open-ended text descriptions of the error and are not selected from a predefined list of standard reasons.
 * @member {Object.<String, Array.<String>>} failedAccessibleIssues
 */
BulkOperationProgress.prototype['failedAccessibleIssues'] = undefined;

/**
 * The number of issues that are either invalid or issues that the user doesn't have permission to view, regardless of the success or failure of the operation.
 * @member {Number} invalidOrInaccessibleIssueCount
 */
BulkOperationProgress.prototype['invalidOrInaccessibleIssueCount'] = undefined;

/**
 * List of issue IDs for which the operation was successful and that the user has permission to view.
 * @member {Array.<Number>} processedAccessibleIssues
 */
BulkOperationProgress.prototype['processedAccessibleIssues'] = undefined;

/**
 * Progress of the task as a percentage.
 * @member {Number} progressPercent
 */
BulkOperationProgress.prototype['progressPercent'] = undefined;

/**
 * A timestamp of when the task was started.
 * @member {Date} started
 */
BulkOperationProgress.prototype['started'] = undefined;

/**
 * The status of the task.
 * @member {module:model/BulkOperationProgress.StatusEnum} status
 */
BulkOperationProgress.prototype['status'] = undefined;

/**
 * @member {module:model/User} submittedBy
 */
BulkOperationProgress.prototype['submittedBy'] = undefined;

/**
 * The ID of the task.
 * @member {String} taskId
 */
BulkOperationProgress.prototype['taskId'] = undefined;

/**
 * The number of issues that the bulk operation was attempted on.
 * @member {Number} totalIssueCount
 */
BulkOperationProgress.prototype['totalIssueCount'] = undefined;

/**
 * A timestamp of when the task progress was last updated.
 * @member {Date} updated
 */
BulkOperationProgress.prototype['updated'] = undefined;





/**
 * Allowed values for the <code>status</code> property.
 * @enum {String}
 * @readonly
 */
BulkOperationProgress['StatusEnum'] = {

    /**
     * value: "ENQUEUED"
     * @const
     */
    "ENQUEUED": "ENQUEUED",

    /**
     * value: "RUNNING"
     * @const
     */
    "RUNNING": "RUNNING",

    /**
     * value: "COMPLETE"
     * @const
     */
    "COMPLETE": "COMPLETE",

    /**
     * value: "FAILED"
     * @const
     */
    "FAILED": "FAILED",

    /**
     * value: "CANCEL_REQUESTED"
     * @const
     */
    "CANCEL_REQUESTED": "CANCEL_REQUESTED",

    /**
     * value: "CANCELLED"
     * @const
     */
    "CANCELLED": "CANCELLED",

    /**
     * value: "DEAD"
     * @const
     */
    "DEAD": "DEAD"
};



export default BulkOperationProgress;

