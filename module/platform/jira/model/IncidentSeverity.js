/**
 * Jira Software Cloud API
 * Jira Software Cloud REST API documentation
 *
 * The version of the OpenAPI document: 1001.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The IncidentSeverity model module.
 * @module model/IncidentSeverity
 * @version 1001.0.0
 */
class IncidentSeverity {
    /**
     * Constructs a new <code>IncidentSeverity</code>.
     * Severity information for a single Incident.  This is the severity information that will be presented to the user on e.g. the Jira Incidents screen. 
     * @alias module:model/IncidentSeverity
     * @param level {module:model/IncidentSeverity.LevelEnum} The severity level of the Incident with P1 being the highest and P5 being the lowest
     */
    constructor(level) { 
        
        IncidentSeverity.initialize(this, level);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, level) { 
        obj['level'] = level;
    }

    /**
     * Constructs a <code>IncidentSeverity</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/IncidentSeverity} obj Optional instance to populate.
     * @return {module:model/IncidentSeverity} The populated <code>IncidentSeverity</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new IncidentSeverity();

            if (data.hasOwnProperty('level')) {
                obj['level'] = ApiClient.convertToType(data['level'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>IncidentSeverity</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>IncidentSeverity</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of IncidentSeverity.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // ensure the json data is a string
        if (data['level'] && !(typeof data['level'] === 'string' || data['level'] instanceof String)) {
            throw new Error("Expected the field `level` to be a primitive type in the JSON string but got " + data['level']);
        }

        return true;
    }


}

IncidentSeverity.RequiredProperties = ["level"];

/**
 * The severity level of the Incident with P1 being the highest and P5 being the lowest
 * @member {module:model/IncidentSeverity.LevelEnum} level
 */
IncidentSeverity.prototype['level'] = undefined;





/**
 * Allowed values for the <code>level</code> property.
 * @enum {String}
 * @readonly
 */
IncidentSeverity['LevelEnum'] = {

    /**
     * value: "P1"
     * @const
     */
    "P1": "P1",

    /**
     * value: "P2"
     * @const
     */
    "P2": "P2",

    /**
     * value: "P3"
     * @const
     */
    "P3": "P3",

    /**
     * value: "P4"
     * @const
     */
    "P4": "P4",

    /**
     * value: "P5"
     * @const
     */
    "P5": "P5",

    /**
     * value: "unknown"
     * @const
     */
    "unknown": "unknown"
};



export default IncidentSeverity;

