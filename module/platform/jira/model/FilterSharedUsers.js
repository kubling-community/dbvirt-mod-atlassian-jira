/**
 * The Jira Cloud platform REST API
 * Jira Cloud platform REST API documentation
 *
 * The version of the OpenAPI document: 1001.0.0-SNAPSHOT-122db9bd6b089919e6465ce52fdce319d5a9dfb4
 * Contact: ecosystem@atlassian.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import User from './User';
import UserList from './UserList';

/**
 * The FilterSharedUsers model module.
 * @module model/FilterSharedUsers
 * @version 1001.0.0-SNAPSHOT-122db9bd6b089919e6465ce52fdce319d5a9dfb4
 */
class FilterSharedUsers {
    /**
     * Constructs a new <code>FilterSharedUsers</code>.
     * A paginated list of the users that the filter is shared with. This includes users that are members of the groups or can browse the projects that the filter is shared with.
     * @alias module:model/FilterSharedUsers
     * @implements module:model/UserList
     */
    constructor() { 
        UserList.initialize(this);
        FilterSharedUsers.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>FilterSharedUsers</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/FilterSharedUsers} obj Optional instance to populate.
     * @return {module:model/FilterSharedUsers} The populated <code>FilterSharedUsers</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new FilterSharedUsers();
            UserList.constructFromObject(data, obj);

            if (data.hasOwnProperty('end-index')) {
                obj['end-index'] = ApiClient.convertToType(data['end-index'], 'Number');
            }
            if (data.hasOwnProperty('items')) {
                obj['items'] = ApiClient.convertToType(data['items'], [User]);
            }
            if (data.hasOwnProperty('max-results')) {
                obj['max-results'] = ApiClient.convertToType(data['max-results'], 'Number');
            }
            if (data.hasOwnProperty('size')) {
                obj['size'] = ApiClient.convertToType(data['size'], 'Number');
            }
            if (data.hasOwnProperty('start-index')) {
                obj['start-index'] = ApiClient.convertToType(data['start-index'], 'Number');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>FilterSharedUsers</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>FilterSharedUsers</code>.
     */
    static validateJSON(data) {
        if (data['items']) { // data not null
            // ensure the json data is an array
            if (!Array.isArray(data['items'])) {
                throw new Error("Expected the field `items` to be an array in the JSON data but got " + data['items']);
            }
            // validate the optional field `items` (array)
            for (const item of data['items']) {
                User.validateJSON(item);
            };
        }

        return true;
    }


}



/**
 * The index of the last item returned on the page.
 * @member {Number} end-index
 */
FilterSharedUsers.prototype['end-index'] = undefined;

/**
 * The list of items.
 * @member {Array.<module:model/User>} items
 */
FilterSharedUsers.prototype['items'] = undefined;

/**
 * The maximum number of results that could be on the page.
 * @member {Number} max-results
 */
FilterSharedUsers.prototype['max-results'] = undefined;

/**
 * The number of items on the page.
 * @member {Number} size
 */
FilterSharedUsers.prototype['size'] = undefined;

/**
 * The index of the first item returned on the page.
 * @member {Number} start-index
 */
FilterSharedUsers.prototype['start-index'] = undefined;


// Implement UserList interface:
/**
 * The index of the last item returned on the page.
 * @member {Number} end-index
 */
UserList.prototype['end-index'] = undefined;
/**
 * The list of items.
 * @member {Array.<module:model/User>} items
 */
UserList.prototype['items'] = undefined;
/**
 * The maximum number of results that could be on the page.
 * @member {Number} max-results
 */
UserList.prototype['max-results'] = undefined;
/**
 * The number of items on the page.
 * @member {Number} size
 */
UserList.prototype['size'] = undefined;
/**
 * The index of the first item returned on the page.
 * @member {Number} start-index
 */
UserList.prototype['start-index'] = undefined;




export default FilterSharedUsers;

