/**
 * The Jira Cloud platform REST API
 * Jira Cloud platform REST API documentation
 *
 * The version of the OpenAPI document: 1001.0.0-SNAPSHOT-122db9bd6b089919e6465ce52fdce319d5a9dfb4
 * Contact: ecosystem@atlassian.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import JiraWorkflow from './JiraWorkflow';
import JiraWorkflowStatus from './JiraWorkflowStatus';

/**
 * The WorkflowUpdateResponse model module.
 * @module model/WorkflowUpdateResponse
 * @version 1001.0.0-SNAPSHOT-122db9bd6b089919e6465ce52fdce319d5a9dfb4
 */
class WorkflowUpdateResponse {
    /**
     * Constructs a new <code>WorkflowUpdateResponse</code>.
     * @alias module:model/WorkflowUpdateResponse
     */
    constructor() { 
        
        WorkflowUpdateResponse.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>WorkflowUpdateResponse</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/WorkflowUpdateResponse} obj Optional instance to populate.
     * @return {module:model/WorkflowUpdateResponse} The populated <code>WorkflowUpdateResponse</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new WorkflowUpdateResponse();

            if (data.hasOwnProperty('statuses')) {
                obj['statuses'] = ApiClient.convertToType(data['statuses'], [JiraWorkflowStatus]);
            }
            if (data.hasOwnProperty('taskId')) {
                obj['taskId'] = ApiClient.convertToType(data['taskId'], 'String');
            }
            if (data.hasOwnProperty('workflows')) {
                obj['workflows'] = ApiClient.convertToType(data['workflows'], [JiraWorkflow]);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>WorkflowUpdateResponse</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>WorkflowUpdateResponse</code>.
     */
    static validateJSON(data) {
        if (data['statuses']) { // data not null
            // ensure the json data is an array
            if (!Array.isArray(data['statuses'])) {
                throw new Error("Expected the field `statuses` to be an array in the JSON data but got " + data['statuses']);
            }
            // validate the optional field `statuses` (array)
            for (const item of data['statuses']) {
                JiraWorkflowStatus.validateJSON(item);
            };
        }
        // ensure the json data is a string
        if (data['taskId'] && !(typeof data['taskId'] === 'string' || data['taskId'] instanceof String)) {
            throw new Error("Expected the field `taskId` to be a primitive type in the JSON string but got " + data['taskId']);
        }
        if (data['workflows']) { // data not null
            // ensure the json data is an array
            if (!Array.isArray(data['workflows'])) {
                throw new Error("Expected the field `workflows` to be an array in the JSON data but got " + data['workflows']);
            }
            // validate the optional field `workflows` (array)
            for (const item of data['workflows']) {
                JiraWorkflow.validateJSON(item);
            };
        }

        return true;
    }


}



/**
 * List of updated statuses.
 * @member {Array.<module:model/JiraWorkflowStatus>} statuses
 */
WorkflowUpdateResponse.prototype['statuses'] = undefined;

/**
 * If there is a [asynchronous task](#async-operations) operation, as a result of this update.
 * @member {String} taskId
 */
WorkflowUpdateResponse.prototype['taskId'] = undefined;

/**
 * List of updated workflows.
 * @member {Array.<module:model/JiraWorkflow>} workflows
 */
WorkflowUpdateResponse.prototype['workflows'] = undefined;






export default WorkflowUpdateResponse;

