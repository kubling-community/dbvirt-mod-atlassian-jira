/**
 * The Jira Cloud platform REST API
 * Jira Cloud platform REST API documentation
 *
 * The version of the OpenAPI document: 1001.0.0-SNAPSHOT-122db9bd6b089919e6465ce52fdce319d5a9dfb4
 * Contact: ecosystem@atlassian.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import WorkflowLayout from './WorkflowLayout';

/**
 * The StatusLayoutUpdate model module.
 * @module model/StatusLayoutUpdate
 * @version 1001.0.0-SNAPSHOT-122db9bd6b089919e6465ce52fdce319d5a9dfb4
 */
class StatusLayoutUpdate {
    /**
     * Constructs a new <code>StatusLayoutUpdate</code>.
     * The statuses associated with this workflow.
     * @alias module:model/StatusLayoutUpdate
     * @extends Object
     * @param properties {Object.<String, String>} The properties for this status layout.
     * @param statusReference {String} A unique ID which the status will use to refer to this layout configuration.
     */
    constructor(properties, statusReference) { 
        
        StatusLayoutUpdate.initialize(this, properties, statusReference);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, properties, statusReference) { 
        obj['properties'] = properties;
        obj['statusReference'] = statusReference;
    }

    /**
     * Constructs a <code>StatusLayoutUpdate</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/StatusLayoutUpdate} obj Optional instance to populate.
     * @return {module:model/StatusLayoutUpdate} The populated <code>StatusLayoutUpdate</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new StatusLayoutUpdate();

            ApiClient.constructFromObject(data, obj, 'Object');
            

            if (data.hasOwnProperty('layout')) {
                obj['layout'] = WorkflowLayout.constructFromObject(data['layout']);
            }
            if (data.hasOwnProperty('properties')) {
                obj['properties'] = ApiClient.convertToType(data['properties'], {'String': 'String'});
            }
            if (data.hasOwnProperty('statusReference')) {
                obj['statusReference'] = ApiClient.convertToType(data['statusReference'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>StatusLayoutUpdate</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>StatusLayoutUpdate</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of StatusLayoutUpdate.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // validate the optional field `layout`
        if (data['layout']) { // data not null
          WorkflowLayout.validateJSON(data['layout']);
        }
        // ensure the json data is a string
        if (data['statusReference'] && !(typeof data['statusReference'] === 'string' || data['statusReference'] instanceof String)) {
            throw new Error("Expected the field `statusReference` to be a primitive type in the JSON string but got " + data['statusReference']);
        }

        return true;
    }


}

StatusLayoutUpdate.RequiredProperties = ["properties", "statusReference"];

/**
 * @member {module:model/WorkflowLayout} layout
 */
StatusLayoutUpdate.prototype['layout'] = undefined;

/**
 * The properties for this status layout.
 * @member {Object.<String, String>} properties
 */
StatusLayoutUpdate.prototype['properties'] = undefined;

/**
 * A unique ID which the status will use to refer to this layout configuration.
 * @member {String} statusReference
 */
StatusLayoutUpdate.prototype['statusReference'] = undefined;






export default StatusLayoutUpdate;

