/**
 * Jira Software Cloud API
 * Jira Software Cloud REST API documentation
 *
 * The version of the OpenAPI document: 1001.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import SubmitDeploymentsResponse1DetailsInner from './SubmitDeploymentsResponse1DetailsInner';

/**
 * The SubmitDeploymentsResponse1 model module.
 * @module model/SubmitDeploymentsResponse1
 * @version 1001.0.0
 */
class SubmitDeploymentsResponse1 {
    /**
     * Constructs a new <code>SubmitDeploymentsResponse1</code>.
     * The current gating status for the given Deployment. 
     * @alias module:model/SubmitDeploymentsResponse1
     */
    constructor() { 
        
        SubmitDeploymentsResponse1.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>SubmitDeploymentsResponse1</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/SubmitDeploymentsResponse1} obj Optional instance to populate.
     * @return {module:model/SubmitDeploymentsResponse1} The populated <code>SubmitDeploymentsResponse1</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new SubmitDeploymentsResponse1();

            if (data.hasOwnProperty('deploymentSequenceNumber')) {
                obj['deploymentSequenceNumber'] = ApiClient.convertToType(data['deploymentSequenceNumber'], 'Number');
            }
            if (data.hasOwnProperty('pipelineId')) {
                obj['pipelineId'] = ApiClient.convertToType(data['pipelineId'], 'String');
            }
            if (data.hasOwnProperty('environmentId')) {
                obj['environmentId'] = ApiClient.convertToType(data['environmentId'], 'String');
            }
            if (data.hasOwnProperty('updatedTimestamp')) {
                obj['updatedTimestamp'] = ApiClient.convertToType(data['updatedTimestamp'], 'Date');
            }
            if (data.hasOwnProperty('gatingStatus')) {
                obj['gatingStatus'] = ApiClient.convertToType(data['gatingStatus'], 'String');
            }
            if (data.hasOwnProperty('details')) {
                obj['details'] = ApiClient.convertToType(data['details'], [SubmitDeploymentsResponse1DetailsInner]);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>SubmitDeploymentsResponse1</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>SubmitDeploymentsResponse1</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['pipelineId'] && !(typeof data['pipelineId'] === 'string' || data['pipelineId'] instanceof String)) {
            throw new Error("Expected the field `pipelineId` to be a primitive type in the JSON string but got " + data['pipelineId']);
        }
        // ensure the json data is a string
        if (data['environmentId'] && !(typeof data['environmentId'] === 'string' || data['environmentId'] instanceof String)) {
            throw new Error("Expected the field `environmentId` to be a primitive type in the JSON string but got " + data['environmentId']);
        }
        // ensure the json data is a string
        if (data['gatingStatus'] && !(typeof data['gatingStatus'] === 'string' || data['gatingStatus'] instanceof String)) {
            throw new Error("Expected the field `gatingStatus` to be a primitive type in the JSON string but got " + data['gatingStatus']);
        }
        if (data['details']) { // data not null
            // ensure the json data is an array
            if (!Array.isArray(data['details'])) {
                throw new Error("Expected the field `details` to be an array in the JSON data but got " + data['details']);
            }
            // validate the optional field `details` (array)
            for (const item of data['details']) {
                SubmitDeploymentsResponse1DetailsInner.validateJSON(item);
            };
        }

        return true;
    }


}



/**
 * This is the identifier for the Deployment. 
 * @member {Number} deploymentSequenceNumber
 */
SubmitDeploymentsResponse1.prototype['deploymentSequenceNumber'] = undefined;

/**
 * The ID of the Deployment's pipeline. 
 * @member {String} pipelineId
 */
SubmitDeploymentsResponse1.prototype['pipelineId'] = undefined;

/**
 * The ID of the Deployment's environment. 
 * @member {String} environmentId
 */
SubmitDeploymentsResponse1.prototype['environmentId'] = undefined;

/**
 * Time the deployment gating status was updated. 
 * @member {Date} updatedTimestamp
 */
SubmitDeploymentsResponse1.prototype['updatedTimestamp'] = undefined;

/**
 * The gating status 
 * @member {module:model/SubmitDeploymentsResponse1.GatingStatusEnum} gatingStatus
 */
SubmitDeploymentsResponse1.prototype['gatingStatus'] = undefined;

/**
 * @member {Array.<module:model/SubmitDeploymentsResponse1DetailsInner>} details
 */
SubmitDeploymentsResponse1.prototype['details'] = undefined;





/**
 * Allowed values for the <code>gatingStatus</code> property.
 * @enum {String}
 * @readonly
 */
SubmitDeploymentsResponse1['GatingStatusEnum'] = {

    /**
     * value: "allowed"
     * @const
     */
    "allowed": "allowed",

    /**
     * value: "prevented"
     * @const
     */
    "prevented": "prevented",

    /**
     * value: "awaiting"
     * @const
     */
    "awaiting": "awaiting",

    /**
     * value: "invalid"
     * @const
     */
    "invalid": "invalid"
};



export default SubmitDeploymentsResponse1;

