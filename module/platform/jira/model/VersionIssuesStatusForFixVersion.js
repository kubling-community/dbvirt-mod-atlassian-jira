/**
 * The Jira Cloud platform REST API
 * Jira Cloud platform REST API documentation
 *
 * The version of the OpenAPI document: 1001.0.0-SNAPSHOT-122db9bd6b089919e6465ce52fdce319d5a9dfb4
 * Contact: ecosystem@atlassian.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import VersionIssuesStatus from './VersionIssuesStatus';

/**
 * The VersionIssuesStatusForFixVersion model module.
 * @module model/VersionIssuesStatusForFixVersion
 * @version 1001.0.0-SNAPSHOT-122db9bd6b089919e6465ce52fdce319d5a9dfb4
 */
class VersionIssuesStatusForFixVersion {
    /**
     * Constructs a new <code>VersionIssuesStatusForFixVersion</code>.
     * If the expand option &#x60;issuesstatus&#x60; is used, returns the count of issues in this version for each of the status categories *to do*, *in progress*, *done*, and *unmapped*. The *unmapped* property contains a count of issues with a status other than *to do*, *in progress*, and *done*.
     * @alias module:model/VersionIssuesStatusForFixVersion
     * @implements module:model/VersionIssuesStatus
     */
    constructor() { 
        VersionIssuesStatus.initialize(this);
        VersionIssuesStatusForFixVersion.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>VersionIssuesStatusForFixVersion</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/VersionIssuesStatusForFixVersion} obj Optional instance to populate.
     * @return {module:model/VersionIssuesStatusForFixVersion} The populated <code>VersionIssuesStatusForFixVersion</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new VersionIssuesStatusForFixVersion();
            VersionIssuesStatus.constructFromObject(data, obj);

            if (data.hasOwnProperty('done')) {
                obj['done'] = ApiClient.convertToType(data['done'], 'Number');
            }
            if (data.hasOwnProperty('inProgress')) {
                obj['inProgress'] = ApiClient.convertToType(data['inProgress'], 'Number');
            }
            if (data.hasOwnProperty('toDo')) {
                obj['toDo'] = ApiClient.convertToType(data['toDo'], 'Number');
            }
            if (data.hasOwnProperty('unmapped')) {
                obj['unmapped'] = ApiClient.convertToType(data['unmapped'], 'Number');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>VersionIssuesStatusForFixVersion</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>VersionIssuesStatusForFixVersion</code>.
     */
    static validateJSON(data) {

        return true;
    }


}



/**
 * Count of issues with status *done*.
 * @member {Number} done
 */
VersionIssuesStatusForFixVersion.prototype['done'] = undefined;

/**
 * Count of issues with status *in progress*.
 * @member {Number} inProgress
 */
VersionIssuesStatusForFixVersion.prototype['inProgress'] = undefined;

/**
 * Count of issues with status *to do*.
 * @member {Number} toDo
 */
VersionIssuesStatusForFixVersion.prototype['toDo'] = undefined;

/**
 * Count of issues with a status other than *to do*, *in progress*, and *done*.
 * @member {Number} unmapped
 */
VersionIssuesStatusForFixVersion.prototype['unmapped'] = undefined;


// Implement VersionIssuesStatus interface:
/**
 * Count of issues with status *done*.
 * @member {Number} done
 */
VersionIssuesStatus.prototype['done'] = undefined;
/**
 * Count of issues with status *in progress*.
 * @member {Number} inProgress
 */
VersionIssuesStatus.prototype['inProgress'] = undefined;
/**
 * Count of issues with status *to do*.
 * @member {Number} toDo
 */
VersionIssuesStatus.prototype['toDo'] = undefined;
/**
 * Count of issues with a status other than *to do*, *in progress*, and *done*.
 * @member {Number} unmapped
 */
VersionIssuesStatus.prototype['unmapped'] = undefined;




export default VersionIssuesStatusForFixVersion;

