/**
 * Jira Software Cloud API
 * Jira Software Cloud REST API documentation
 *
 * The version of the OpenAPI document: 1001.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import CreateBoardRequestLocation from './CreateBoardRequestLocation';
import GetConfiguration200ResponseColumnConfig from './GetConfiguration200ResponseColumnConfig';
import GetConfiguration200ResponseColumnConfigColumnsInnerStatusesInner from './GetConfiguration200ResponseColumnConfigColumnsInnerStatusesInner';
import GetConfiguration200ResponseEstimation from './GetConfiguration200ResponseEstimation';
import GetConfiguration200ResponseRanking from './GetConfiguration200ResponseRanking';
import GetConfiguration200ResponseSubQuery from './GetConfiguration200ResponseSubQuery';

/**
 * The BoardConfigBean model module.
 * @module model/BoardConfigBean
 * @version 1001.0.0
 */
class BoardConfigBean {
    /**
     * Constructs a new <code>BoardConfigBean</code>.
     * @alias module:model/BoardConfigBean
     */
    constructor() { 
        
        BoardConfigBean.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>BoardConfigBean</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/BoardConfigBean} obj Optional instance to populate.
     * @return {module:model/BoardConfigBean} The populated <code>BoardConfigBean</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new BoardConfigBean();

            if (data.hasOwnProperty('columnConfig')) {
                obj['columnConfig'] = GetConfiguration200ResponseColumnConfig.constructFromObject(data['columnConfig']);
            }
            if (data.hasOwnProperty('estimation')) {
                obj['estimation'] = GetConfiguration200ResponseEstimation.constructFromObject(data['estimation']);
            }
            if (data.hasOwnProperty('filter')) {
                obj['filter'] = GetConfiguration200ResponseColumnConfigColumnsInnerStatusesInner.constructFromObject(data['filter']);
            }
            if (data.hasOwnProperty('id')) {
                obj['id'] = ApiClient.convertToType(data['id'], 'Number');
            }
            if (data.hasOwnProperty('location')) {
                obj['location'] = CreateBoardRequestLocation.constructFromObject(data['location']);
            }
            if (data.hasOwnProperty('name')) {
                obj['name'] = ApiClient.convertToType(data['name'], 'String');
            }
            if (data.hasOwnProperty('ranking')) {
                obj['ranking'] = GetConfiguration200ResponseRanking.constructFromObject(data['ranking']);
            }
            if (data.hasOwnProperty('self')) {
                obj['self'] = ApiClient.convertToType(data['self'], 'String');
            }
            if (data.hasOwnProperty('subQuery')) {
                obj['subQuery'] = GetConfiguration200ResponseSubQuery.constructFromObject(data['subQuery']);
            }
            if (data.hasOwnProperty('type')) {
                obj['type'] = ApiClient.convertToType(data['type'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>BoardConfigBean</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>BoardConfigBean</code>.
     */
    static validateJSON(data) {
        // validate the optional field `columnConfig`
        if (data['columnConfig']) { // data not null
          GetConfiguration200ResponseColumnConfig.validateJSON(data['columnConfig']);
        }
        // validate the optional field `estimation`
        if (data['estimation']) { // data not null
          GetConfiguration200ResponseEstimation.validateJSON(data['estimation']);
        }
        // validate the optional field `filter`
        if (data['filter']) { // data not null
          GetConfiguration200ResponseColumnConfigColumnsInnerStatusesInner.validateJSON(data['filter']);
        }
        // validate the optional field `location`
        if (data['location']) { // data not null
          CreateBoardRequestLocation.validateJSON(data['location']);
        }
        // ensure the json data is a string
        if (data['name'] && !(typeof data['name'] === 'string' || data['name'] instanceof String)) {
            throw new Error("Expected the field `name` to be a primitive type in the JSON string but got " + data['name']);
        }
        // validate the optional field `ranking`
        if (data['ranking']) { // data not null
          GetConfiguration200ResponseRanking.validateJSON(data['ranking']);
        }
        // ensure the json data is a string
        if (data['self'] && !(typeof data['self'] === 'string' || data['self'] instanceof String)) {
            throw new Error("Expected the field `self` to be a primitive type in the JSON string but got " + data['self']);
        }
        // validate the optional field `subQuery`
        if (data['subQuery']) { // data not null
          GetConfiguration200ResponseSubQuery.validateJSON(data['subQuery']);
        }
        // ensure the json data is a string
        if (data['type'] && !(typeof data['type'] === 'string' || data['type'] instanceof String)) {
            throw new Error("Expected the field `type` to be a primitive type in the JSON string but got " + data['type']);
        }

        return true;
    }


}



/**
 * @member {module:model/GetConfiguration200ResponseColumnConfig} columnConfig
 */
BoardConfigBean.prototype['columnConfig'] = undefined;

/**
 * @member {module:model/GetConfiguration200ResponseEstimation} estimation
 */
BoardConfigBean.prototype['estimation'] = undefined;

/**
 * @member {module:model/GetConfiguration200ResponseColumnConfigColumnsInnerStatusesInner} filter
 */
BoardConfigBean.prototype['filter'] = undefined;

/**
 * @member {Number} id
 */
BoardConfigBean.prototype['id'] = undefined;

/**
 * @member {module:model/CreateBoardRequestLocation} location
 */
BoardConfigBean.prototype['location'] = undefined;

/**
 * @member {String} name
 */
BoardConfigBean.prototype['name'] = undefined;

/**
 * @member {module:model/GetConfiguration200ResponseRanking} ranking
 */
BoardConfigBean.prototype['ranking'] = undefined;

/**
 * @member {String} self
 */
BoardConfigBean.prototype['self'] = undefined;

/**
 * @member {module:model/GetConfiguration200ResponseSubQuery} subQuery
 */
BoardConfigBean.prototype['subQuery'] = undefined;

/**
 * @member {String} type
 */
BoardConfigBean.prototype['type'] = undefined;






export default BoardConfigBean;

