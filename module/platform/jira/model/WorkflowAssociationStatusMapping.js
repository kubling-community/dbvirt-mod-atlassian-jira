/**
 * The Jira Cloud platform REST API
 * Jira Cloud platform REST API documentation
 *
 * The version of the OpenAPI document: 1001.0.0-SNAPSHOT-122db9bd6b089919e6465ce52fdce319d5a9dfb4
 * Contact: ecosystem@atlassian.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The WorkflowAssociationStatusMapping model module.
 * @module model/WorkflowAssociationStatusMapping
 * @version 1001.0.0-SNAPSHOT-122db9bd6b089919e6465ce52fdce319d5a9dfb4
 */
class WorkflowAssociationStatusMapping {
    /**
     * Constructs a new <code>WorkflowAssociationStatusMapping</code>.
     * The list of status mappings.
     * @alias module:model/WorkflowAssociationStatusMapping
     * @param newStatusId {String} The ID of the status in the new workflow.
     * @param oldStatusId {String} The ID of the status in the old workflow that isn't present in the new workflow.
     */
    constructor(newStatusId, oldStatusId) { 
        
        WorkflowAssociationStatusMapping.initialize(this, newStatusId, oldStatusId);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, newStatusId, oldStatusId) { 
        obj['newStatusId'] = newStatusId;
        obj['oldStatusId'] = oldStatusId;
    }

    /**
     * Constructs a <code>WorkflowAssociationStatusMapping</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/WorkflowAssociationStatusMapping} obj Optional instance to populate.
     * @return {module:model/WorkflowAssociationStatusMapping} The populated <code>WorkflowAssociationStatusMapping</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new WorkflowAssociationStatusMapping();

            if (data.hasOwnProperty('newStatusId')) {
                obj['newStatusId'] = ApiClient.convertToType(data['newStatusId'], 'String');
            }
            if (data.hasOwnProperty('oldStatusId')) {
                obj['oldStatusId'] = ApiClient.convertToType(data['oldStatusId'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>WorkflowAssociationStatusMapping</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>WorkflowAssociationStatusMapping</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of WorkflowAssociationStatusMapping.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // ensure the json data is a string
        if (data['newStatusId'] && !(typeof data['newStatusId'] === 'string' || data['newStatusId'] instanceof String)) {
            throw new Error("Expected the field `newStatusId` to be a primitive type in the JSON string but got " + data['newStatusId']);
        }
        // ensure the json data is a string
        if (data['oldStatusId'] && !(typeof data['oldStatusId'] === 'string' || data['oldStatusId'] instanceof String)) {
            throw new Error("Expected the field `oldStatusId` to be a primitive type in the JSON string but got " + data['oldStatusId']);
        }

        return true;
    }


}

WorkflowAssociationStatusMapping.RequiredProperties = ["newStatusId", "oldStatusId"];

/**
 * The ID of the status in the new workflow.
 * @member {String} newStatusId
 */
WorkflowAssociationStatusMapping.prototype['newStatusId'] = undefined;

/**
 * The ID of the status in the old workflow that isn't present in the new workflow.
 * @member {String} oldStatusId
 */
WorkflowAssociationStatusMapping.prototype['oldStatusId'] = undefined;






export default WorkflowAssociationStatusMapping;

